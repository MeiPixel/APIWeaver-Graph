[{"type": "class", "name": "graspologic.Dict", "documentation": "dict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)"}, {"type": "class", "name": "graspologic.List", "documentation": "Built-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified."}, {"type": "class", "name": "graspologic.Set", "documentation": "set() -> new empty set object\nset(iterable) -> new set object\n\nBuild an unordered collection of unique elements."}, {"type": "class", "name": "graspologic.Tuple", "documentation": "Built-in immutable sequence.\n\nIf no argument is given, the constructor returns an empty tuple.\nIf iterable is specified the tuple is initialized from iterable's items.\n\nIf the argument is a tuple, the return value is the same object."}, {"type": "function", "name": "graspologic.__version", "documentation": "Distribution takes precedence, but otherwise we try to read it from the filesystem\n\nIf all else fails, we have no way of knowing what version we are"}]